### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump = ts(data.Trump)
View(data)
View(data)
Donald_Trump = ts(data[1])
S&P500= ts(data[5])
View(data)
View(data)
Donald_Trump = ts(data[2])
S&P500= ts(data[5])
Donald_Trump = ts(data[2])
S&P500= ts(data[5])
View(data)
S&P500= ts(data[7])
SeP500= ts(data[7])
View(data)
View(data)
SeP500= ts(data[7])
SeP500= ts(data[8])
View(data)
View(data)
Trump= ts(data[2])
Donald_Trump = ts(data[3])
SeP500= ts(data[8])
data= [Trump, SeP500]
data= (Trump, SeP500)
data1 = cbind(Trump,SeP00)
data2 = cbind(Donald_Trump,SeP00)
data1 = cbind(Trump,SeP500)
data2 = cbind(Donald_Trump,SeP500)
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
setwd("C:/Users/Marco/Dropbox/Progetti/Finance and Banking/04 - Courses/Financial Econometrics - Proietti/Project")
set.seed(21111994);
sample(1:30, 2); #Components N. 4 (Boeing Co) and N. 17 (JPMorgan Chase & Co)
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
# Boeing Co - BA
boeing_data = read.csv("BA.csv", header = TRUE, stringsAsFactors = FALSE)
BA = boeing_data[,"Adj.Close"] #Taking only the Adjusted Close column
dates = as.Date(boeing_data$Date,"%Y-%m-%d")
# JPMorgan Chase & Co - JPM
jpmorgan_data = read.csv("JPM.csv", header = TRUE, stringsAsFactors = FALSE)
JPM = jpmorgan_data[,"Adj.Close"] #Taking only the Adjusted Close column
# Combining data into one variable for Prices
data = cbind(BA,JPM)
Prices = ts(data)
# Obtaining stock log-returns
Returns = 100*diff(log(Prices))
# Saving the processed R workspace
save.image(file='workspace.RData')
# Load R workspace
load ('workspace.RData')
# BA - Summary Stats of the observed asset returns
summary(Returns[,1]); skewness(Returns[,1]); kurtosis(Returns[,1])
# JPM - Summary Stats of the observed asset returns
summary(Returns[,2]); skewness(Returns[,2]); kurtosis(Returns[,2])
# Data Visualization
plot(Prices, main="Stock Prices", xlab = "Number of Observations",col="darkgrey")
plot(Returns, main="Stock log-Returns", xlab = "Number of Observations",col="darkblue")
pairs(Returns)
# Load R workspace
load ('workspace.RData')
set.seed(21111994);
sample(1:30, 2); #Components N. 4 (Boeing Co) and N. 17 (JPMorgan Chase & Co)
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
# Boeing Co - BA
boeing_data = read.csv("BA.csv", header = TRUE, stringsAsFactors = FALSE)
BA = boeing_data[,"Adj.Close"] #Taking only the Adjusted Close column
dates = as.Date(boeing_data$Date,"%Y-%m-%d")
# JPMorgan Chase & Co - JPM
jpmorgan_data = read.csv("JPM.csv", header = TRUE, stringsAsFactors = FALSE)
JPM = jpmorgan_data[,"Adj.Close"] #Taking only the Adjusted Close column
# Combining data into one variable for Prices
data = cbind(BA,JPM)
Prices = ts(data)
# Obtaining stock log-returns
Returns = 100*diff(log(Prices))
# Saving the processed R workspace
save.image(file='workspace.RData')
# Boeing Co - BA
boeing_data = read.csv("BA.csv", header = TRUE, stringsAsFactors = FALSE)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2,dccOrder = c(1,1),distribution="mvnorm")))
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R')
source('C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/R analysis/Anaysis.R', echo=TRUE)
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data[2])
Donald_Trump = ts(data[3])
SeP500= ts(data[8])
data1 = cbind(Trump,SeP500)
data2 = cbind(Donald_Trump,SeP500)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc garch11 spec data = (dcc.garch11.spec, data=SeP500 Trump)
dcc.fit =dccfit(dcc.garch11.spec, data = (dcc.garch11.spec, data=SeP500 Trump)
dcc.fit =dccfit(dcc.garch11.spec,  data=SeP500 Trump)
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
View(dcc.fit)
dcc.fit
plot(dcc.fit)
return = read.csv("ret_dataset.csv", header = TRUE, stringsAsFactors = FALSE)
View(return)
SeP500_ret= ts(return[8])
data_ret = cbind(SeP500_ret,Trump)
View(data_ret)
View(data_ret)
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
dcc.fit = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
data_ret = cbind(SeP500_ret[1,:],Trump[1,:])
data_ret = cbind(SeP500_ret[1,],Trump[1,])
View(data_ret)
View(data_ret)
data_ret = cbind(SeP500_ret[1:,],Trump[1:,])
data_ret = cbind(SeP500_ret[-1,],Trump[-1,])
View(data_ret)
View(data_ret)
data_ret[1]='SeP500_ret'
View(data_ret)
View(data_ret)
data_ret = cbind(SeP500_ret[-1,],Trump[-1,])
data_ret[,1]='SeP500_ret'
View(data_ret)
View(data_ret)
data_ret = cbind(SeP500_ret[-1,],Trump[-1,])
data_ret(1)='SeP500_ret'
colnames(data_ret)<- c("SeP500","Trump")
View(data_ret)
View(data_ret)
colnames(data_ret)<- c("SeP500_ret","Trump")
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
plot(dcc.fit2)
Trump_ret = ts(return[2])
Donald_Trump_ret = ts(return[3])
SeP500_ret= ts(return[8])
data_ret = cbind(SeP500_ret,Trump_ret])
data_ret = cbind(SeP500_ret,Trump_ret)
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
plot(dcc.fit2)
0
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
data_ret = cbind(SeP500_ret,Trump_ret)
Trump= ts(data[-1,2])
Trump= ts(data[2])
Trump_ret = ts(return[-1,2])
Donald_Trump_ret = ts(return[-1,3])
SeP500_ret= ts(return[-1,8])
data_ret = cbind(SeP500_ret,Trump_ret)
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
plot(dcc.fit2)
plot(dcc.fit)
plot(dcc.fit)
Trump= ts(data[2])
Trump_ret = ts(return[-1,2])
Donald_Trump = ts(data[3])
SeP500= ts(data[8])
Donald_Trump_ret = ts(return[-1,3])
SeP500_ret= ts(return[-1,8])
data1 = cbind(Trump,SeP500)
data2 = cbind(Donald_Trump,SeP500)
data_ret = cbind(SeP500_ret,Trump_ret)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
dcc.fit2 = dcc.fit =dccfit(dcc.garch11.spec,  data=data_ret)
plot(dcc.fit)
##VOLATILITY SMILE
##DCC MODEL-->analyzing correlation##
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
return = read.csv("ret_dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data[2])
Trump_ret = ts(return[-1,2])
Donald_Trump = ts(data[3])
Donald_Trump_ret = ts(return[-1,3])
SeP500= ts(data[8])
SeP500_ret= ts(return[-1,8])
data1 = cbind(Trump,SeP500)
data2 = cbind(Donald_Trump,SeP500)
data_ret = cbind(SeP500_ret,Trump_ret)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
dcc.fit2 = dccfit(dcc.garch11.spec,  data=data_ret)
plot(dcc.fit)
plot(dcc.fit2)
plot(Trump, SeP500)
plot(Trump)
hold on
plot(SeP500)
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
return = read.csv("dataset_diff.csv", header = TRUE, stringsAsFactors = FALSE)
View(return)
View(return)
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
return = read.csv("dataset_diff.csv", header = TRUE, stringsAsFactors = FALSE)
View(data_ret)
View(data_ret)
View(data)
View(data)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
return = read.csv("dataset_diff.csv", header = TRUE, stringsAsFactors = FALSE)
View(data)
View(data)
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = TRUE)
View(data)
View(data)
data.sp500
data.Trump
return = read.csv("dataset_ret.csv", header = TRUE, stringsAsFactors = FALSE)
View(return)
View(return)
View(data)
View(data)
Trump= ts(data[10])
Trump_ret = ts(return[10])
SeP500= ts(data[5])
SeP500_ret= ts(return[-5])
data1 = cbind(Trump,SeP500)
data1_ret = cbind(Trump_ret,SeP500_ret)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
dcc.fit2 = dccfit(dcc.garch11.spec,  data=data1_ret)
plot(dcc.fit)
data2 = cbind(Trump,SeP500_ret)
plot(dcc.fit2)
dcc.fit2 = dccfit(dcc.garch11.spec,  data=data1_ret)
View(data1)
View(data1)
View(data1_ret)
View(data1_ret)
View(data1_ret)
SeP500_ret= ts(return[-5])
data1_ret = cbind(Trump_ret,SeP500_ret)
SeP500_ret= ts(return[5])
data1_ret = cbind(Trump_ret,SeP500_ret)
dcc.fit2 = dccfit(dcc.garch11.spec,  data=data1_ret)
plot(dcc.fit2)
data2 = cbind(Trump,SeP500_ret)
dcc.fit3 = dccfit(dcc.garch11.spec,  data=data2)
plot(dcc.fit3)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
plot(dcc.fit)
plot(dcc.fit2)
plot(dcc.fit3)
View(data)
View(dcc.fit)
View(dcc.fit)
pluto = dcc.fit.R
View(dcc.fit2)
View(dcc.fit)
plut=dcc.fit.mfit
pluto=dcc.fit.mfit.R()
pluto=dcc.fit.mfit.R
pluto=dcc.mfit.R
print(dcc.fit)
pluto = rcorr(dcc.fit)
pluto = rcor(dcc.fit)
View(pluto)
View(pluto)
gino = pluto[1,2,]
view(gino)
View(gino)
write.csv(gino, "dynamic_corr.csv")
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:\Users\MARCOFIORAVANTIPC\Google Drive\MSC FINANCE AND BANKING\thesis_2\apollo 1\dataset\dataset.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
return = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset_ret.csv", header = TRUE, stringsAsFactors = FALSE)
View(data)
View(data)
Trump= ts(data[10])
View(Trump)
View(return)
View(return)
View(data)
View(data)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
return = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset_ret.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data[11])
Trump_ret = ts(return[10])
SeP500= ts(data[6])
SeP500_ret= ts(return[5])
data1 = cbind(Trump,SeP500)
data1_ret = cbind(Trump_ret,SeP500_ret)
data2 = cbind(Trump,SeP500_ret)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
dcc.fit2 = dccfit(dcc.garch11.spec,  data=data1_ret)
dcc.fit3 = dccfit(dcc.garch11.spec,  data=data2)
plot(dcc.fit)
0
write.csv(gino, "C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dynamic_corr.csv")
pluto = rcor(dcc.fit)
gino = pluto[1,2,]
write.csv(gino, "C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dynamic_corr.csv")
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
View(data)
View(data)
Trump= ts(data[13])
View(Trump)
data1 = cbind(Trump,SeP500)
#Trump_ret = ts(return[10])
SeP500= ts(data[6])
View(S&P500)
View(SeP500)
View(data)
data1 = cbind(Trump,SeP500)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
dcc.fit2 = dccfit(dcc.garch11.spec,  data=data1_ret)
dcc.fit3 = dccfit(dcc.garch11.spec,  data=data2)
pluto = rcor(dcc.fit)
gino = pluto[1,2,]
write.csv(gino, "C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dynamic_corr.csv")
cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data.Trump)
Trump= ts(data[-2])
View(Trump)
View(Trump)
View(Trump)
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data[14])
View(Trump)
#Trump_ret = ts(return[10])
SeP500= ts(data[6])
print(SeP500)
print(SeP500[1:50])
print(SeP500[1:end])
print(SeP500[1:])
print(SeP500[25 : -1])
print(SeP500[25 : 0])
print(SeP500[25 : 0])
print(SeP500[25 : ])
print(SeP500[25 : :])
print(SeP500[25 : -1])
print(SeP500[25 : end])
print(SeP500[25 : End])
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
data1 = cbind(Trump,SeP500)
print(data[1: 50 , :])
print(data[1: 50])
print(data[1:3,1:5])
print(data1[1:3,1:5])
print(data1[1:3,1:2])
print(nrow(data1))
View(data1)
View(data)
View(data)
print(data1[1:3,1:2])
gino = zeros(nrow(data1))
gino = integer(nrow(data1))
print(gino[1])
gino = integer(nrow(data1-252))
gino = integer(nrow(data1)-252)
for (i in (252 : nrow(data1))){
dcc.fit =dccfit(dcc.garch11.spec,  data=data1[1:i,1:2])
pluto = rcor(dcc.fit)
gino = pluto[1,2,]
}
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data[14])
#Trump_ret = ts(return[10])
SeP500= ts(data[6])
data1 = cbind(Trump,SeP500)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dcc.fit =dccfit(dcc.garch11.spec,  data=data1)
pluto = rcor(dcc.fit)
gino = pluto[1,2,]
gino = pluto[1,2,1]
View(pluto)
View(pluto)
for (i in (252 : nrow(data1))){
print i}
for (i in (252 : nrow(data1))){
print i}
gino = integer(nrow(data1)-252)
for (i in (252 : nrow(data1))){
dcc.fit =dccfit(dcc.garch11.spec,  data=data1[1:i,1:2])
pluto = rcor(dcc.fit)
gino[i-251] = pluto[1,2,i-251]
}
#pluto = rcor(dcc.fit)
#gino = pluto[1,2,1]
dcc.fit =dccfit(dcc.garch11.spec,  data=data1[1:252,1:2])
gino[1] = pluto[1,2,252]
sam = pluto[1,2,252]
View(dcc.fit)
View(dcc.fit)
pluto = rcor(dcc.fit)
sam = pluto[1,2,252]
View(pluto)
print(data1[1:252,1:2])
View(data)
View(data)
for (i in (252 : nrow(data1))){
print(i)}
dyncorr2 = integer(nrow(data1)-252)
for (i in (252 : nrow(data1) j in (1:length(dyncorr2)))){
print (i j)}
for (i in (252 : nrow(data1) j in (1:length(dyncorr2)))){
print (i , j)}
for (i in (252 : nrow(data1) j in (1:length(dyncorr2)))){
print (i)}
for (i in 1:10 j in 2:11){print (i , j)}
for (i in 1:10 j in 2:11){print (i)}
for (i in (252 : nrow(data1))){
j=i-251
print(j)}
print(dyncorr2[0])
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
Trump= ts(data[14])
#Trump_ret = ts(return[10])
SeP500= ts(data[6])
data1 = cbind(Trump,SeP500)
garch11.spec = ugarchspec(mean.model = list(armaOrder = c(0,0)), variance.model = list(garchOrder = c(1,1),model = "sGARCH"), distribution.model = "norm")
dcc.garch11.spec = dccspec(uspec = multispec (replicate(2, garch11.spec)), dccOrder = c(1,1),distribution="mvnorm")
dyncorr2 = integer(nrow(data1)-252)
for (i in (252 : nrow(data1))){
dcc.fit =dccfit(dcc.garch11.spec,  data=data1[1:i,1:2])
dmat = rcor(dcc.fit)
dyncorr2[i-252] = dmat[1,2,i]
}
View(dyncorr2)
write.csv(dyncorr2, "C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 1/dataset/dynamic_corr2.csv")
