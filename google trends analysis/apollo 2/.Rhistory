####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND trendNKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND trendNKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv("C:\Users\MARCOFIORAVANTIPC\Google Drive\MSC FINANCE AND BANKING\thesis_2\apollo 2\dataset\dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv(r"C:\Users\MARCOFIORAVANTIPC\Google Drive\MSC FINANCE AND BANKING\thesis_2\apollo 2\dataset\dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANNKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
View(data)
View(data)
oil = ts(data[6])
trend_data = ts(data[18])
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
trend_data = diff(log(trend_data))
dataf = data.frame(dates,oil,trend_data)
plot(dataf$wei_oil_gen_trend,type = 'l' )
plot(dataf$wei_oil_gen_trend,type = 'l' )
plot(dataf$trend_data,type = 'l' )
plot(dataf$oil,type = 'l' )
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
oil = ts(data[6])
trend_data = ts(data[18])
plot(oil)
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
trend_data = diff(log(trend_data))
dataf = data.frame(dates,oil,trend_data)
plot(dataf$trend_data,type = 'l' )
plot(dataf$oil,type = 'l' )
plot(dataf$gen_trend,type = 'l' )
summary(trend_data)
summary(oil)
plot(dataf$gen_trend,dataf$oil)
oil_2 = (oil)^2 ##############squared returns
trend_data_2 = (trend_data)^2 ##############squared returns
oil_2 = (oil)^2 ##############squared returns
trend_data_2 = (trend_data)^2 ##############squared returns
reg_oil_trend = lm(formula = dataf$oil ~ dataf$gen_trend , x=TRUE, y=TRUE)
reg_oil_trend_2 = lm(formula = (dataf$oil)^2 ~ (dataf$gen_trend)^2 , x=TRUE, y=TRUE)
View(reg_oil_trend)
summary(reg_oil_trend)
n_lag = 10
lag_corr = integer(n_lag+1)
for (i in (0:n_lag)){
lag = i
lag_corr[i+1]= cor(dataf$oil[(1+lag): length(dataf$oil)], dataf$wei_oil_gen_trend[1:(length(dataf$wei_oil_gen_trend)-lag)])
}
View(reg_oil_trend)
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
trend_data = diff(log(trend_data))
dataf = data.frame(dates,oil,trend_data)
####plot and summary####################
plot(dataf$gen_trend,type = 'l' )
plot(dataf$oil,type = 'l' )
summary(trend_data)
summary(oil)
plot(dataf$gen_trend,dataf$oil)
oil_2 = (oil)^2 ##############squared returns
trend_data_2 = (trend_data)^2 ##############squared returns
reg_oil_trend = lm(formula = dataf$oil ~ dataf$gen_trend , x=TRUE, y=TRUE)
reg_oil_trend_2 = lm(formula = (dataf$oil)^2 ~ (dataf$gen_trend)^2 , x=TRUE, y=TRUE)
n_lag = 10
lag_corr = integer(n_lag+1)
for (i in (0:n_lag)){
lag = i
lag_corr[i+1]= cor(dataf$oil[(1+lag): length(dataf$oil)], dataf$gen_trend[1:(length(dataf$gen_trend)-lag)])
}
View(lag_corr)
View(dataf)
View(dataf)
plot(dataf$oil,type = 'l' )
oil = ts(data[6])
View(oil)
for(i in ( 1 : lenght(oil))){
if oil[i]>50 then
oil[i]= oil[i-1]
}
for(i in ( 1 : lenght(oil))){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
for(i in ( 1 : nrow(oil))){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
for(i in ( 1 : length(oil))){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
lenght(oil)
length(oil)
for(i in ( 1 : length(oil))){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
ength(oil)
length(oil)
for(i in ( 1 :580)){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
oil[20]
for(i in ( 2 :length(oil))){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
oil
for(i in ( 2 :length(oil))){
if (oil[i]>50){
oil[i]= oil[i-1]}
}
View oil
View(oil)
plot(oil)
for(i in ( 2 :length(oil))){
if (abs(oil[i]>50)){
oil[i]= oil[i-1]}
}
plot(oil)
for(i in ( 2 :length(oil))){
if (abs(oil[i]>50 or oil[i]<50)){
oil[i]= oil[i-1]}
}
for(i in ( 2 :length(oil))){
if (abs(oil[i]>50 | oil[i]<50)){
oil[i]= oil[i-1]}
}
plot(oil)
View(oil)
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
for(i in ( 2 :length(oil))){
if (abs(oil[i]>50 | oil[i]<-50)){
oil[i]= oil[i-1]}
}
for(i in ( 2 :length(oil))){
if (oil[i]>50 | oil[i]<-50){
oil[i]= oil[i-1]}
}
for(i in ( 2 :length(oil))){
if (oil[i]>50 || oil[i]<-50){
oil[i]= oil[i-1]}
}
for(i in ( 2 :length(oil))){
if (oil[i]>50 || oil[i]<-50){
oil[i]= oil[i-1]}
}
for(i in ( 2 :length(oil))){
if (oil[i]>50 || oil[i]<-50){
oil[i]= oil[i-1]}
}
if (oil[3]>50 || oil[3]<-50){
oil[3]= oil[2]}
for(i in ( 2 :length(oil))){
if ((oil[i]>50) || (oil[i]<-50)){
oil[i]= oil[i-1]}
}
plot(oil)
plot(oil)
####cleaning#########
rm(list=ls()) #clear all variables
graphics.off()  # clean up graphic window
cat("\014") #clear the workspace
# Loading Libraries
library(rugarch); library(fGarch); library(rmgarch); library(zoo); library(ggplot2)
### import data##
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
plot(oil)
for(i in ( 2 :length(oil))){
if ((oil[i]>50) || (oil[i]<-50)){
oil[i]= oil[i-1]}
}
plot(oil)
data = read.csv("C:/Users/MARCOFIORAVANTIPC/Google Drive/MSC FINANCE AND BANKING/thesis_2/apollo 2/dataset/dataset2_oil.csv", header = TRUE, stringsAsFactors = FALSE)
oil = ts(data[6])
trend_data = ts(data[18])
dates = data[2:nrow(data), 2  ]
oil = 100*diff(log(oil))
for(i in ( 2 :length(oil))){
if ((oil[i]>50) || (oil[i]<(-50))){
oil[i]= oil[i-1]}
}
plot(oil)
trend_data = diff(log(trend_data))
dataf = data.frame(dates,oil,trend_data)
plot(dataf$gen_trend,type = 'l' )
plot(dataf$oil,type = 'l' )
summary(trend_data)
summary(oil)
plot(dataf$gen_trend,dataf$oil)
oil_2 = (oil)^2 ##############squared returns
trend_data_2 = (trend_data)^2 ##############squared returns
reg_oil_trend = lm(formula = dataf$oil ~ dataf$gen_trend , x=TRUE, y=TRUE)
reg_oil_trend_2 = lm(formula = (dataf$oil)^2 ~ (dataf$gen_trend)^2 , x=TRUE, y=TRUE)
View(reg_oil_trend)
View(reg_oil_trend)
summary(reg_oil_trend)
summary(reg_oil_trend_2)
plot(reg_oil_trend_2)
n_lag = 10
lag_corr = integer(n_lag+1)
for (i in (0:n_lag)){
lag = i
lag_corr[i+1]= cor(dataf$oil[(1+lag): length(dataf$oil)], dataf$gen_trend[1:(length(dataf$gen_trend)-lag)])
}
n_lag = 10
lag_corr_2 = integer(n_lag+1)
for (i in (0:n_lag)){
lag = i
lag_corr_2[i]= cor(oil_2[(1+lag): length(oil_2)], trend_data_2[1:(length(trend_data_2)-lag)])
}
lag_corr
lag_corr_2
lag_corr_2 = ccf(oil_2;trend_data_2)
lag_corr_2 = ccf(oil_2,trend_data_2)
oil_2 = ts (oil)^2 ##############squared returns
trend_data_2 = ts (trend_data)^2 ##############squared returns
lag_corr_2 = ccf(oil_2,trend_data_2)
lag_corr_2 = ccf(oil_2[:,1],trend_data_2[:,1])
lag_corr_2 = ccf(oil_2[: , 1],trend_data_2[: , 1])
lag_corr_2 = ccf(oil_2[ , 1],trend_data_2[ , 1])
lag_corr = ccf(dataf$oil , dataf$gen_trend)
t_garch11.spec.trend = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(garchOrder = c(1,1), model = "sGARCH"),
distribution.model = "norm" )
# Model Fitting
t_garch11.fit.trend = ugarchfit(spec=t_garch11.spec.trend, data=data$oil, solver.control=list(trace = 1))
t_garch11.fit.trend
t_garch11.fit.trend@fit$hessian
windows(); par(mfcol = c(2,2))
# Conditional Volatility
plot.ts(sigma(t_garch11.fit.trend),
main="trend - Conditional Volatility t-GARCH(1,1)",
xlab = "Number of Observations", ylab="sqrt(h_t)", col="green4")
# Standardized Residuals
std.res_tgarch_trend = ts(as.numeric(residuals(t_garch11.fit.trend, standardize=TRUE)))
plot(std.res_tgarch_trend, main='Standardized Residuals', xlab='Number of Observations', ylab='Standardized Residuals')
acf((std.res_tgarch_trend)^2, main='ACF - Standardized Squared Residuals')
plot(t_garch11.fit.trend, which=9)
summary(std.res_tgarch_trend); skewness(std.res_tgarch_trend); kurtosis(std.res_tgarch_trend)
summary(sigma(t_garch11.fit.trend))
acf_oil = acf(oil)
summary(acf_oil)
View(acf_oil)
acf_oil[["acf"]]
plot(acf_oil[,])
plot(acf_oil[2,])
plot(acf_oil[2 : ])
plot(acf_oil[2 : , ])
plot(acf_oil[2 : length(acf_oil), ])
plot(acf)
plot(acf_oil)
plot(acf_oil)
t_garch11.spec.trend = ugarchspec(mean.model = list(armaOrder = c(1,1)),
variance.model = list(garchOrder = c(1,1), model = "sGARCH"),
distribution.model = "norm" )
# Model Fitting
t_garch11.fit.trend = ugarchfit(spec=t_garch11.spec.trend, data=data$oil, solver.control=list(trace = 1))
t_garch11.fit.trend
t_garch11.fit.trend@fit$hessian
windows(); par(mfcol = c(2,2))
# Conditional Volatility
plot.ts(sigma(t_garch11.fit.trend),
main="trend - Conditional Volatility t-GARCH(1,1)",
xlab = "Number of Observations", ylab="sqrt(h_t)", col="green4")
# Standardized Residuals
std.res_tgarch_trend = ts(as.numeric(residuals(t_garch11.fit.trend, standardize=TRUE)))
plot(std.res_tgarch_trend, main='Standardized Residuals', xlab='Number of Observations', ylab='Standardized Residuals')
acf((std.res_tgarch_trend)^2, main='ACF - Standardized Squared Residuals')
plot(t_garch11.fit.trend, which=9)
summary(std.res_tgarch_trend); skewness(std.res_tgarch_trend); kurtosis(std.res_tgarch_trend)
summary(sigma(t_garch11.fit.trend))
t_garch11.spec.trend = ugarchspec(mean.model = list(armaOrder = c(3,1)),
variance.model = list(garchOrder = c(1,1), model = "sGARCH"),
distribution.model = "norm" )
# Model Fitting
t_garch11.fit.trend = ugarchfit(spec=t_garch11.spec.trend, data=data$oil, solver.control=list(trace = 1))
t_garch11.fit.trend
t_garch11.fit.trend@fit$hessian
windows(); par(mfcol = c(2,2))
# Conditional Volatility
plot.ts(sigma(t_garch11.fit.trend),
main="trend - Conditional Volatility t-GARCH(1,1)",
xlab = "Number of Observations", ylab="sqrt(h_t)", col="green4")
# Standardized Residuals
std.res_tgarch_trend = ts(as.numeric(residuals(t_garch11.fit.trend, standardize=TRUE)))
plot(std.res_tgarch_trend, main='Standardized Residuals', xlab='Number of Observations', ylab='Standardized Residuals')
acf((std.res_tgarch_trend)^2, main='ACF - Standardized Squared Residuals')
plot(t_garch11.fit.trend, which=9)
summary(std.res_tgarch_trend); skewness(std.res_tgarch_trend); kurtosis(std.res_tgarch_trend)
summary(sigma(t_garch11.fit.trend))
View(t_garch11.fit.trend)
summary(t_garch11.fit.trend)
stats(t_garch11.fit.trend)
t_garch11.fit.trend@fit[["coef"]]
